"use strict";(self.webpackChunkdocs_riscv_org=self.webpackChunkdocs_riscv_org||[]).push([[2561],{4427:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"spec/non-isa/reri","title":"RERI Architecture Specification","description":"Augments Reliability, Availability, and Serviceability (RAS) features in the SoC with a standard mechanism for reporting errors by means of a memory-mapped register interface to enable error reporting. Additionally, this specification supports software-initiated error logging, reporting, and testing of RAS handlers. Lastly, this specification provides maximal flexibility to implement error handling and coexists with RAS frameworks defined by other standards such as PCIe and CXL.","source":"@site/docs/spec/non-isa/reri-architecture.mdx","sourceDirName":"spec/non-isa","slug":"/spec/non-isa/reri","permalink":"/docs.riscv.org/docs/spec/non-isa/reri","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/spec/non-isa/reri-architecture.mdx","tags":[],"version":"current","frontMatter":{"title":"RERI Architecture Specification","id":"reri","hide_table_of_contents":true,"pdf":"../../../pdf/riscv-reri.pdf"},"sidebar":"specSidebar","previous":{"title":"Capacity and Bandwidth QoS Register Interface","permalink":"/docs.riscv.org/docs/spec/non-isa/qos"},"next":{"title":"Trace Connectors","permalink":"/docs.riscv.org/docs/spec/non-isa/trace-conectors"}}');var n=i(4848),o=i(8453);const s={title:"RERI Architecture Specification",id:"reri",hide_table_of_contents:!0,pdf:"../../../pdf/riscv-reri.pdf"},a=void 0,c={},d=[];function p(e){const t={p:"p",...(0,o.R)(),...e.components},{PDF:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("PDF",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Augments Reliability, Availability, and Serviceability (RAS) features in the SoC with a standard mechanism for reporting errors by means of a memory-mapped register interface to enable error reporting. Additionally, this specification supports software-initiated error logging, reporting, and testing of RAS handlers. Lastly, this specification provides maximal flexibility to implement error handling and coexists with RAS frameworks defined by other standards such as PCIe and CXL."}),"\n",(0,n.jsx)(i,{download:s.pdf,title:s.title})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var r=i(6540);const n={},o=r.createContext(n);function s(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);